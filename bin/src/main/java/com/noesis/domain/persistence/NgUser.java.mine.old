package com.noesis.domain.persistence;
// Generated 31 Jul, 2018 12:08:37 AM by Hibernate Tools 4.3.5.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.apache.commons.lang3.SerializationUtils;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * NgUser generated by hbm2java
 */
@Entity
@Table(name = "ng_user", catalog = "genesis")
public class NgUser implements java.io.Serializable {

	private static final long serialVersionUID = 1676665425599676769L;
	private int id;
	private int version;
	private NgAccountType ngAccountType;
	private NgBillingType ngBillingType;
	private NgBillingCycle ngBillingCycle;
	private NgCustomerType ngCustomerType;
	private NgDepartment ngDepartment;
	private NgDlrMediumType ngDlrMediumType;
	private NgMessageType ngMessageType;
	private NgOrganisation ngOrganisation;
	private NgPriority ngPriority;
	private NgStatus ngStatus;
	private NgUserRole ngUserRole;
	private String userName;
	private String password;
	private String encryptedPassword;
	private Integer parentId;
	private String email;
	private String mobile;
	private char isExpressAllowed;
	private char isDndCheck;
	private char isDndAllowed;
	private char isGuiAccess;
	private char isHttp;
	private char isHttps;
	private char isBlockOut;
	private char isDlrAllowed;
	private char isMessageFilter;
	private char isDupCheck;
	private int dupCheckType;
	private char isBlackListAllowed;
	private char isTimeAdjust;
	
	private char isDynamicSenderId;
	private Date createdDate;
	private Date updatedDate;
	private String updatedBy;
	private Date expiry;
	private char isBulkUpload;
	private char isSmppUser;
	private char isIntlAllowed;
	private int abusingWordsAllowedCount;
	private int maxDlrRetryCount;
	private String dlrPushUrl;
	private char isVisualizeAllowed;
	private char isCreditHistoryAllowed;
	private char isAutoCreditRefund;
	private char isMNumberMasking;
	private int mNumberMaskingCount;
	private char isLowCreditAlert;
	private int lowCreditAlertLimit;
	private int adId;
	private int saId;
	private int reId;
	private int seId;
	private int amId;
	private int txSession;
	private int rxSession;
	private int trxSession;
	private int dupMsgTimeInSec;
	private char rejectFailedNumber;
	private char isOtpRequired;
	private char isShortCodeAllowed;
	private char replaceShortCode;
	private String dlrUrlType;
	private String dlrUrlBody;
	//private char isErrorCodeReplace = 'N';
	
	@Column(name = "is_otp_required", nullable = false, length = 1)
	public char getIsOtpRequired() {
		return isOtpRequired;
	}

	public void setIsOtpRequired(char isOtpRequired) {
		this.isOtpRequired = isOtpRequired;
	}

	
	
	private Set<NgUserAbusingWordsCategoryMap> ngUserAbusingWordsCategoryMaps = new HashSet<NgUserAbusingWordsCategoryMap>(
			0);
	private Set<NgUserPremiumList> ngUserPremiumLists = new HashSet<NgUserPremiumList>(0);
	private Set<NgUserDlrConfig> ngUserDlrConfigs = new HashSet<NgUserDlrConfig>(0);
	private Set<NgUserBlackList> ngUserBlackLists = new HashSet<NgUserBlackList>(0);
	private Set<NgUserCreditMap> ngUserCreditMaps = new HashSet<NgUserCreditMap>(0);
	private Set<NgUserSenderIdMap> ngUserSenderIdMaps = new HashSet<NgUserSenderIdMap>(0);
	private Set<NgUserTemplateMap> ngUserTemplateMaps = new HashSet<NgUserTemplateMap>(0);
	private Set<NgUserSenderIdBlackList> ngUserSenderIdBlackLists = new HashSet<NgUserSenderIdBlackList>(0);
//	private String hostName;
	
	public NgUser() {
	}

	public NgUser(int id, NgBillingType ngBillingType, NgBillingCycle ngBillingCycle,
			NgCustomerType ngCustomerType, NgDepartment ngDepartment, NgDlrMediumType ngDlrMediumType,
			NgMessageType ngMessageType, NgOrganisation ngOrganisation, NgPriority ngPriority, NgStatus ngStatus,
			NgUserRole ngUserRole, String userName, String password, char isExpressAllowed, char isDndCheck,
			char isDndAllowed, char isGuiAccess, char isHttp, char isHttps, char isBlockOut, char isDlrAllowed,
			char isMessageFilter, char isDupCheck, int dupCheckType, char isBlackListAllowed, char isTimeAdjust,
			char isOtpRequired, char isDynamicSenderId, Date createdDate, Date updatedDate, String updatedBy, char isBulkUpload,
			char isSmppUser, char isIntlAllowed, int abusingWordsAllowedCount, int maxDlrRetryCount, String dlrPushUrl,
			char isVisualizeAllowed, char isCreditHistoryAllowed, char isAutoCreditRefund, char isMNumberMasking, int mNumberMaskingCount,
			char isLowCreditAlert, int lowCreditAlertLimit, int adId, int saId, int reId, int seId, int amId, int dupMsgTimeInSec , String dlrUrlType, String dlrUrlBody) {
		this.id = id;
		this.ngBillingType = ngBillingType;
		this.ngBillingCycle = ngBillingCycle;
		this.ngCustomerType = ngCustomerType;
		this.ngDepartment = ngDepartment;
		this.ngDlrMediumType = ngDlrMediumType;
		this.ngMessageType = ngMessageType;
		this.ngOrganisation = ngOrganisation;
		this.ngPriority = ngPriority;
		this.ngStatus = ngStatus;
		this.ngUserRole = ngUserRole;
		this.userName = userName;
		this.password = password;
		this.isExpressAllowed = isExpressAllowed;
		this.isDndCheck = isDndCheck;
		this.isDndAllowed = isDndAllowed;
		this.isGuiAccess = isGuiAccess;
		this.isHttp = isHttp;
		this.isHttps = isHttps;
		this.isBlockOut = isBlockOut;
		this.isDlrAllowed = isDlrAllowed;
		this.isMessageFilter = isMessageFilter;
		this.isDupCheck = isDupCheck;
		this.dupCheckType = dupCheckType;
		this.isBlackListAllowed = isBlackListAllowed;
		this.isTimeAdjust = isTimeAdjust;
		this.isOtpRequired = isOtpRequired;
		this.isDynamicSenderId = isDynamicSenderId;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.updatedBy = updatedBy;
		this.isBulkUpload = isBulkUpload;
		this.isSmppUser = isSmppUser;
		this.isIntlAllowed = isIntlAllowed;
		this.abusingWordsAllowedCount = abusingWordsAllowedCount;
		this.maxDlrRetryCount = maxDlrRetryCount;
		this.dlrPushUrl = dlrPushUrl;
		this.isVisualizeAllowed = isVisualizeAllowed;
		this.isCreditHistoryAllowed = isCreditHistoryAllowed;
		this.isAutoCreditRefund = isAutoCreditRefund;
		this.isMNumberMasking = isMNumberMasking;
		this.mNumberMaskingCount = mNumberMaskingCount;
		this.isLowCreditAlert = isLowCreditAlert;
		this.lowCreditAlertLimit = lowCreditAlertLimit; 
		this.adId = adId;
		this.saId = saId;
		this.reId = reId;
		this.seId = seId;
		this.amId = amId;
		this.dupMsgTimeInSec = dupMsgTimeInSec;
		this.rejectFailedNumber = rejectFailedNumber;
		
//		changes for dlr type and body 
		this.dlrUrlType = dlrUrlType;
		this.dlrUrlBody = dlrUrlBody;
//		end code 
		//this.hostName = hostName;
		//this.isErrorCodeReplace = isErrorCodeReplace;
	}

	public NgUser(int id, NgBillingType ngBillingType, NgBillingCycle ngBillingCycle,
			NgCustomerType ngCustomerType, NgDepartment ngDepartment, NgDlrMediumType ngDlrMediumType,
			NgMessageType ngMessageType, NgOrganisation ngOrganisation, NgPriority ngPriority, NgStatus ngStatus,
			NgUserRole ngUserRole, String userName, String password, String encryptedPassword, Integer parentId,
			String email, String mobile, char isExpressAllowed, char isDndCheck, char isDndAllowed, char isGuiAccess,
			char isHttp, char isHttps, char isBlockOut, char isDlrAllowed, char isMessageFilter, char isDupCheck,
			int dupCheckType, char isBlackListAllowed, char isTimeAdjust, char isOtpRequired, char isDynamicSenderId,
			Date createdDate, Date updatedDate, String updatedBy, Date expiry, char isBulkUpoad,
			Set<NgUserPremiumList> ngUserPremiumLists,
			Set<NgUserAbusingWordsCategoryMap> ngUserAbusingWordsCategoryMaps, Set<NgUserDlrConfig> ngUserDlrConfigs,
			Set<NgUserBlackList> ngUserBlackLists, Set<NgUserSenderIdBlackList> ngUserSenderIdBlackLists,
			Set<NgUserCreditMap> ngUserCreditMaps, Set<NgUserSenderIdMap> ngUserSenderIdMaps,
			Set<NgUserTemplateMap> ngUserTemplateMaps, char isSmppUser, char isIntlAllowed,
			int abusingWordsAllowedCount, int maxDlrRetryCount, String dlrPushUrl, char IsVisualizeAllowed, char isVisualizeAllowed, char isCreditHistoryAllowed, char isAutoCreditRefund, char isMNumberMasking, int mNumberMaskingCount,
			char isLowCreditAlert, int lowCreditAlertLimit, int adId, int saId, int reId,
			int seId, int amId, int dupMsgTimeInSec, char rejectFailedNumber, char isShortCodeAllowed, String dlrUrlType, String dlrUrlBody) {
		this.id = id;
		this.ngAccountType = ngAccountType;
		this.ngBillingType = ngBillingType;
		this.ngBillingCycle = ngBillingCycle;
		this.ngCustomerType = ngCustomerType;
		this.ngDepartment = ngDepartment;
		this.ngDlrMediumType = ngDlrMediumType;
		this.ngMessageType = ngMessageType;
		this.ngOrganisation = ngOrganisation;
		this.ngPriority = ngPriority;
		this.ngStatus = ngStatus;
		this.ngUserRole = ngUserRole;
		this.userName = userName;
		this.password = password;
		this.encryptedPassword = encryptedPassword;
		this.parentId = parentId;
		this.email = email;
		this.mobile = mobile;
		this.isExpressAllowed = isExpressAllowed;
		this.isDndCheck = isDndCheck;
		this.isDndAllowed = isDndAllowed;
		this.isGuiAccess = isGuiAccess;
		this.isHttp = isHttp;
		this.isHttps = isHttps;
		this.isBlockOut = isBlockOut;
		this.isDlrAllowed = isDlrAllowed;
		this.isMessageFilter = isMessageFilter;
		this.isDupCheck = isDupCheck;
		this.dupCheckType = dupCheckType;
		this.isBlackListAllowed = isBlackListAllowed;
		this.isTimeAdjust = isTimeAdjust;
		this.isOtpRequired = isOtpRequired;
		this.isDynamicSenderId = isDynamicSenderId;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.updatedBy = updatedBy;
		this.expiry = expiry;
		this.isBulkUpload = isBulkUpoad;
		this.isSmppUser = isSmppUser;
		this.isIntlAllowed = isIntlAllowed;
		this.ngUserPremiumLists = ngUserPremiumLists;
		this.ngUserAbusingWordsCategoryMaps = ngUserAbusingWordsCategoryMaps;
		this.ngUserDlrConfigs = ngUserDlrConfigs;
		this.ngUserBlackLists = ngUserBlackLists;
		this.ngUserSenderIdBlackLists = ngUserSenderIdBlackLists;
		this.ngUserCreditMaps = ngUserCreditMaps;
		this.ngUserSenderIdMaps = ngUserSenderIdMaps;
		this.ngUserTemplateMaps = ngUserTemplateMaps;
		this.abusingWordsAllowedCount = abusingWordsAllowedCount;
		this.maxDlrRetryCount = maxDlrRetryCount;
		this.dlrPushUrl = dlrPushUrl;
		this.isVisualizeAllowed = isVisualizeAllowed;
		this.isCreditHistoryAllowed = isCreditHistoryAllowed;
		this.isAutoCreditRefund = isAutoCreditRefund;
		this.isMNumberMasking = isMNumberMasking;
		this.mNumberMaskingCount = mNumberMaskingCount;
		this.isLowCreditAlert = isLowCreditAlert;
		this.lowCreditAlertLimit = lowCreditAlertLimit; 
		this.adId = adId;
		this.saId = saId;
		this.reId = reId;
		this.seId = seId;
		this.amId = amId;
		this.dupMsgTimeInSec = dupMsgTimeInSec;
		this.rejectFailedNumber = rejectFailedNumber;
		this.isShortCodeAllowed = isShortCodeAllowed;
		this.dlrUrlType = dlrUrlType;
		this.dlrUrlBody = dlrUrlBody;
		//this.isErrorCodeReplace = isErrorCodeReplace;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public int getVersion() {
		return this.version;
	}

	public void setVersion(int version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "account_type")
	@JsonBackReference
	public NgAccountType getNgAccountType() {
		return this.ngAccountType;
	}

	public void setNgAccountType(NgAccountType ngAccountType) {
		this.ngAccountType = ngAccountType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "billing_type", nullable = false)
	@JsonBackReference
	public NgBillingType getNgBillingType() {
		return this.ngBillingType;
	}

	public void setNgBillingType(NgBillingType ngBillingType) {
		this.ngBillingType = ngBillingType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "billing_cycle", nullable = false)
	@JsonBackReference
	public NgBillingCycle getNgBillingCycle() {
		return this.ngBillingCycle;
	}

	public void setNgBillingCycle(NgBillingCycle ngBillingCycle) {
		this.ngBillingCycle = ngBillingCycle;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "customer_type", nullable = false)
	@JsonBackReference
	public NgCustomerType getNgCustomerType() {
		return this.ngCustomerType;
	}

	public void setNgCustomerType(NgCustomerType ngCustomerType) {
		this.ngCustomerType = ngCustomerType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "dept_id", nullable = false)
	@JsonBackReference
	public NgDepartment getNgDepartment() {
		return this.ngDepartment;
	}

	public void setNgDepartment(NgDepartment ngDepartment) {
		this.ngDepartment = ngDepartment;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "dlr_type", nullable = false)
	@JsonBackReference
	public NgDlrMediumType getNgDlrMediumType() {
		return this.ngDlrMediumType;
	}

	public void setNgDlrMediumType(NgDlrMediumType ngDlrMediumType) {
		this.ngDlrMediumType = ngDlrMediumType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "message_type", nullable = false)
	@JsonBackReference
	public NgMessageType getNgMessageType() {
		return this.ngMessageType;
	}

	public void setNgMessageType(NgMessageType ngMessageType) {
		this.ngMessageType = ngMessageType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "org_id", nullable = false)
	@JsonBackReference
	public NgOrganisation getNgOrganisation() {
		return this.ngOrganisation;
	}

	public void setNgOrganisation(NgOrganisation ngOrganisation) {
		this.ngOrganisation = ngOrganisation;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "priority", nullable = false)
	@JsonBackReference
	public NgPriority getNgPriority() {
		return this.ngPriority;
	}

	public void setNgPriority(NgPriority ngPriority) {
		this.ngPriority = ngPriority;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "status", nullable = false)
	@JsonBackReference
	public NgStatus getNgStatus() {
		return this.ngStatus;
	}

	public void setNgStatus(NgStatus ngStatus) {
		this.ngStatus = ngStatus;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "user_role", nullable = false)
	@JsonBackReference
	public NgUserRole getNgUserRole() {
		return this.ngUserRole;
	}

	public void setNgUserRole(NgUserRole ngUserRole) {
		this.ngUserRole = ngUserRole;
	}

	@Column(name = "user_name", nullable = false, length = 45)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "encrypted_password", length = 100)
	public String getEncryptedPassword() {
		return this.encryptedPassword;
	}

	public void setEncryptedPassword(String encryptedPassword) {
		this.encryptedPassword = encryptedPassword;
	}

	@Column(name = "parent_id")
	public Integer getParentId() {
		return this.parentId;
	}

	public void setParentId(Integer parentId) {
		this.parentId = parentId;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "mobile", length = 45)
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "is_express_allowed", nullable = false, length = 1)
	public char getIsExpressAllowed() {
		return this.isExpressAllowed;
	}

	public void setIsExpressAllowed(char isExpressAllowed) {
		this.isExpressAllowed = isExpressAllowed;
	}

	@Column(name = "is_dnd_check", nullable = false, length = 1)
	public char getIsDndCheck() {
		return this.isDndCheck;
	}

	public void setIsDndCheck(char isDndCheck) {
		this.isDndCheck = isDndCheck;
	}

	@Column(name = "is_dnd_allowed", nullable = false, length = 1)
	public char getIsDndAllowed() {
		return this.isDndAllowed;
	}

	public void setIsDndAllowed(char isDndAllowed) {
		this.isDndAllowed = isDndAllowed;
	}

	@Column(name = "is_gui_access", nullable = false, length = 1)
	public char getIsGuiAccess() {
		return this.isGuiAccess;
	}

	public void setIsGuiAccess(char isGuiAccess) {
		this.isGuiAccess = isGuiAccess;
	}

	@Column(name = "is_http", nullable = false, length = 1)
	public char getIsHttp() {
		return this.isHttp;
	}

	public void setIsHttp(char isHttp) {
		this.isHttp = isHttp;
	}

	@Column(name = "is_https", nullable = false, length = 1)
	public char getIsHttps() {
		return this.isHttps;
	}

	public void setIsHttps(char isHttps) {
		this.isHttps = isHttps;
	}

	@Column(name = "is_block_out", nullable = false, length = 1)
	public char getIsBlockOut() {
		return this.isBlockOut;
	}

	public void setIsBlockOut(char isBlockOut) {
		this.isBlockOut = isBlockOut;
	}

	@Column(name = "is_dlr_allowed", nullable = false, length = 1)
	public char getIsDlrAllowed() {
		return this.isDlrAllowed;
	}

	public void setIsDlrAllowed(char isDlrAllowed) {
		this.isDlrAllowed = isDlrAllowed;
	}

	@Column(name = "is_message_filter", nullable = false, length = 1)
	public char getIsMessageFilter() {
		return this.isMessageFilter;
	}

	public void setIsMessageFilter(char isMessageFilter) {
		this.isMessageFilter = isMessageFilter;
	}

	@Column(name = "is_dup_check", nullable = false, length = 1)
	public char getIsDupCheck() {
		return this.isDupCheck;
	}

	public void setIsDupCheck(char isDupCheck) {
		this.isDupCheck = isDupCheck;
	}

	@Column(name = "dup_check_type", nullable = false)
	public int getDupCheckType() {
		return this.dupCheckType;
	}

	public void setDupCheckType(int dupCheckType) {
		this.dupCheckType = dupCheckType;
	}

	@Column(name = "is_black_list_allowed", nullable = false, length = 1)
	public char getIsBlackListAllowed() {
		return this.isBlackListAllowed;
	}

	public void setIsBlackListAllowed(char isBlackListAllowed) {
		this.isBlackListAllowed = isBlackListAllowed;
	}

	@Column(name = "is_time_adjust", nullable = false, length = 1)
	public char getIsTimeAdjust() {
		return this.isTimeAdjust;
	}

	public void setIsTimeAdjust(char isTimeAdjust) {
		this.isTimeAdjust = isTimeAdjust;
	}



	@Column(name = "is_dynamic_sender_id", nullable = false, length = 1)
	public char getIsDynamicSenderId() {
		return this.isDynamicSenderId;
	}

	public void setIsDynamicSenderId(char isDynamicSenderId) {
		this.isDynamicSenderId = isDynamicSenderId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "updated_by", nullable = false, length = 45)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "expiry", length = 19)
	public Date getExpiry() {
		return this.expiry;
	}

	public void setExpiry(Date expiry) {
		this.expiry = expiry;
	}

	@Column(name = "is_bulk_upload", nullable = false, length = 1)
	public char getIsBulkUpload() {
		return this.isBulkUpload;
	}

	public void setIsBulkUpload(char isBulkUpload) {
		this.isBulkUpload = isBulkUpload;
	}

	@Column(name = "is_smpp_user", nullable = false, length = 1)
	public char getIsSmppUser() {
		return this.isSmppUser;
	}

	public void setIsSmppUser(char isSmppUser) {
		this.isSmppUser = isSmppUser;
	}

	@Column(name = "is_intl_allowed", nullable = false, length = 1)
	public char getIsIntlAllowed() {
		return this.isIntlAllowed;
	}

	public void setIsIntlAllowed(char isIntlAllowed) {
		this.isIntlAllowed = isIntlAllowed;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ngUser")
	@JsonIgnore
	public Set<NgUserDlrConfig> getNgUserDlrConfigs() {
		return this.ngUserDlrConfigs;
	}

	public void setNgUserDlrConfigs(Set<NgUserDlrConfig> ngUserDlrConfigs) {
		this.ngUserDlrConfigs = ngUserDlrConfigs;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "ngUser")
	@JsonIgnore
	public Set<NgUserPremiumList> getNgUserPremiumLists() {
		return this.ngUserPremiumLists;
	}

	public void setNgUserPremiumLists(Set<NgUserPremiumList> ngUserPremiumLists) {
		this.ngUserPremiumLists = ngUserPremiumLists;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "ngUser")
	public Set<NgUserAbusingWordsCategoryMap> getNgUserAbusingWordsCategoryMaps() {
		return this.ngUserAbusingWordsCategoryMaps;
	}

	public void setNgUserAbusingWordsCategoryMaps(Set<NgUserAbusingWordsCategoryMap> ngUserAbusingWordsCategoryMaps) {
		this.ngUserAbusingWordsCategoryMaps = ngUserAbusingWordsCategoryMaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ngUser")
	@JsonIgnore
	public Set<NgUserBlackList> getNgUserBlackLists() {
		return this.ngUserBlackLists;
	}

	public void setNgUserBlackLists(Set<NgUserBlackList> ngUserBlackLists) {
		this.ngUserBlackLists = ngUserBlackLists;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "ngUser")
	@JsonIgnore
	public Set<NgUserSenderIdBlackList> getNgUserSenderIdBlackLists() {
		return this.ngUserSenderIdBlackLists;
	}

	public void setNgUserSenderIdBlackLists(Set<NgUserSenderIdBlackList> ngUserSenderIdBlackLists) {
		this.ngUserSenderIdBlackLists = ngUserSenderIdBlackLists;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "ngUser")
	@JsonIgnore
	public Set<NgUserCreditMap> getNgUserCreditMaps() {
		return this.ngUserCreditMaps;
	}

	public void setNgUserCreditMaps(Set<NgUserCreditMap> ngUserCreditMaps) {
		this.ngUserCreditMaps = ngUserCreditMaps;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "ngUser", cascade = CascadeType.ALL)
	@JsonManagedReference
	public Set<NgUserSenderIdMap> getNgUserSenderIdMaps() {
		return this.ngUserSenderIdMaps;
	}

	public void setNgUserSenderIdMaps(Set<NgUserSenderIdMap> ngUserSenderIdMaps) {
		this.ngUserSenderIdMaps = ngUserSenderIdMaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ngUser")
	@JsonIgnore
	public Set<NgUserTemplateMap> getNgUserTemplateMaps() {
		return this.ngUserTemplateMaps;
	}

	public void setNgUserTemplateMaps(Set<NgUserTemplateMap> ngUserTemplateMaps) {
		this.ngUserTemplateMaps = ngUserTemplateMaps;
	}

	@Column(name = "abusing_words_allowed_count", nullable = false)
	public int getAbusingWordsAllowedCount() {
		return abusingWordsAllowedCount;
	}

	public void setAbusingWordsAllowedCount(int abusingWordsAllowedCount) {
		this.abusingWordsAllowedCount = abusingWordsAllowedCount;
	}

	@Column(name = "max_dlr_retry_count", nullable = false)
	public int getMaxDlrRetryCount() {
		return maxDlrRetryCount;
	}

	public void setMaxDlrRetryCount(int maxDlrRetryCount) {
		this.maxDlrRetryCount = maxDlrRetryCount;
	}

	@Column(name = "dlr_push_url", length = 1500)
	public String getDlrPushUrl() {
		return this.dlrPushUrl;
	}

	public void setDlrPushUrl(String dlrPushUrl) {
		this.dlrPushUrl = dlrPushUrl;
	}
	
	@Column(name = "is_visualize_allowed", nullable = false, length = 1)
	public char getIsVisualizeAllowed() {
		return this.isVisualizeAllowed;
	}

	public void setIsVisualizeAllowed(char isVisualizeAllowed) {
		this.isVisualizeAllowed = isVisualizeAllowed;
	}
	

	
	@Column(name = "ad_id", length = 11)
	public Integer getAdId() {
		return this.adId;
	}

	public void setAdId(Integer adId) {
		this.adId = adId;
	}

	@Column(name = "sa_id", length = 11)
	public Integer getSaId() {
		return this.saId;
	}

	public void setSaId(Integer saId) {
		this.saId = saId;
	}

	@Column(name = "re_id", length = 11)
	public Integer getReId() {
		return this.reId;
	}

	public void setReId(Integer reId) {
		this.reId = reId;
	}

	@Column(name = "se_id", length = 11)
	public Integer getSeId() {
		return this.seId;
	}

	public void setSeId(Integer seId) {
		this.seId = seId;
	}
	
	@Column(name = "am_id", length = 11)
	public Integer getAmId() {
		return this.amId;
	}

	public void setAmId(Integer amId) {
		this.amId = amId;
	}	
	
	@Column(name = "is_credit_history_allowed", nullable = false, length = 1)
	public char getIsCreditHistoryAllowed() {
		return this.isCreditHistoryAllowed;
	}

	public void setisCreditHistoryAllowed(char isCreditHistoryAllowed) {
		this.isCreditHistoryAllowed = isCreditHistoryAllowed;
	}
	
	@Column(name = "is_auto_credit_refund", nullable = false, length = 1)
	public char getIsAutoCreditRefund() {
		return this.isAutoCreditRefund;
	}

	public void setIsAutoCreditRefund(char isAutoCreditRefund) {
		this.isAutoCreditRefund = isAutoCreditRefund;
	}
	
	@Column(name = "is_mnumber_masking", nullable = false, length = 1)
	public char getIsMNumberMasking() {
		return this.isMNumberMasking;
	}

	public void setIsMNumberMasking(char isMNumberMasking) {
		this.isMNumberMasking = isMNumberMasking;
	}
	
	@Column(name = "mnumber_masking_count", nullable = false, length = 11)
	public int getMNumberMaskingCount() {
		return this.mNumberMaskingCount;
	}

	public void setMNumberMaskingCount(int mNumberMaskingCount) {
		this.mNumberMaskingCount = mNumberMaskingCount;
	}
	
	@Column(name = "is_low_credit_alert", nullable = false, length = 1)
	public char getIsLowCreditAlert() {
		return this.isLowCreditAlert;
	}

	public void setIsLowCreditAlert(char isLowCreditAlert) {
		this.isLowCreditAlert = isLowCreditAlert;
	}
	
	@Column(name = "low_credit_alert_limit", nullable = false, length = 1)
	public int getLowCreditAlertLimit() {
		return this.lowCreditAlertLimit;
	}

	public void setLowCreditAlertLimit(int lowCreditAlertLimit) {
		this.lowCreditAlertLimit = lowCreditAlertLimit;
	}

	@Column(name = "tx_session")
	public int getTxSession() {
		return txSession;
	}

	public void setTxSession(int txSession) {
		this.txSession = txSession;
	}

	@Column(name = "rx_session")
	public int getRxSession() {
		return rxSession;
	}

	public void setRxSession(int rxSession) {
		this.rxSession = rxSession;
	}

	@Column(name = "trx_session")
	public int getTrxSession() {
		return trxSession;
	}

	public void setTrxSession(int trxSession) {
		this.trxSession = trxSession;
	}
	
	@Column(name = "dup_msg_time_in_sec")
	public int getDupMsgTimeInSec() {
		return dupMsgTimeInSec;
	}

	public void setDupMsgTimeInSec(int dupMsgTimeInSec) {
		this.dupMsgTimeInSec = dupMsgTimeInSec;
	}
	
	@Column(name = "reject_failed_number", nullable = false, length = 1)
	public char getRejectFailedNumber() {
		return rejectFailedNumber;
	}

	public void setRejectFailedNumber(char rejectFailedNumber) {
		this.rejectFailedNumber = rejectFailedNumber;
	}
	
	
	@Column(name = "short_code_allowed", nullable = false, length = 1)
	public char getIsShortCodeAllowed() {
		return isShortCodeAllowed;
	}

	public void setIsShortCodeAllowed(char isShortCodeAllowed) {
		this.isShortCodeAllowed = isShortCodeAllowed;
	}
	
	
	@Column(name = "replace_short_code", nullable = false, length = 1)
	public char getReplaceShortCode() {
		return replaceShortCode;
	}

	public void setReplaceShortCode(char replaceShortCode) {
		this.replaceShortCode = replaceShortCode;
	}
	@Column(name = "dlr_url_type", length = 10)
	public String getDlrUrlType() {
		return dlrUrlType;
	}

	public void setDlrUrlType(String dlrUrlType) {
		this.dlrUrlType = dlrUrlType;
	}
	@Column(name = "dlr_url_body", length = 500)
	public String getDlrUrlBody() {
		return dlrUrlBody;
	}

	public void setDlrUrlBody(String dlrUrlBody) {
		this.dlrUrlBody = dlrUrlBody;
	}
	public NgUser getClonedNgUser(NgUser ngUser) {
		NgUser clonedNgUser = (NgUser)SerializationUtils.clone(ngUser);
		
		NgUser newUser = new NgUser();
		newUser.setAbusingWordsAllowedCount(clonedNgUser.getAbusingWordsAllowedCount());
		newUser.setAdId(clonedNgUser.getAdId());
		newUser.setDlrPushUrl(clonedNgUser.getDlrPushUrl());
		newUser.setDupCheckType(clonedNgUser.getDupCheckType());
		newUser.setEmail(clonedNgUser.getEmail());
//		newUser.setEncryptedPassword(clonedNgUser.getEncryptedPassword());
		newUser.setExpiry(clonedNgUser.getExpiry());
		newUser.setIsBlackListAllowed(clonedNgUser.getIsBlackListAllowed());
		newUser.setIsBlockOut(clonedNgUser.getIsBlockOut());
		newUser.setIsBulkUpload(clonedNgUser.getIsBulkUpload());
		newUser.setIsDlrAllowed(clonedNgUser.getIsDlrAllowed());
		newUser.setIsDndAllowed(clonedNgUser.getIsDndAllowed());
		newUser.setIsDndCheck(clonedNgUser.getIsDndCheck());
		newUser.setIsDupCheck(clonedNgUser.getIsDupCheck());
		newUser.setIsDynamicSenderId(clonedNgUser.getIsDynamicSenderId());
		newUser.setIsExpressAllowed(clonedNgUser.getIsExpressAllowed());
		newUser.setIsGuiAccess(clonedNgUser.getIsGuiAccess());
		newUser.setIsHttp(clonedNgUser.getIsHttp());
		newUser.setIsHttps(clonedNgUser.getIsHttps());
		newUser.setIsIntlAllowed(clonedNgUser.getIsIntlAllowed());
		newUser.setIsMessageFilter(clonedNgUser.getIsMessageFilter());
		newUser.setIsOtpRequired(clonedNgUser.getIsOtpRequired());
		newUser.setIsSmppUser(clonedNgUser.getIsSmppUser());
		newUser.setIsTimeAdjust(clonedNgUser.getIsTimeAdjust());
		newUser.setMaxDlrRetryCount(clonedNgUser.getMaxDlrRetryCount());
		newUser.setMobile(clonedNgUser.getMobile());
		//newUser.setNgAccountType(clonedNgUser.getNgAccountType());
		newUser.setNgBillingCycle(clonedNgUser.getNgBillingCycle());
		newUser.setNgBillingType(clonedNgUser.getNgBillingType());
		newUser.setNgCustomerType(clonedNgUser.getNgCustomerType());
		newUser.setNgDepartment(clonedNgUser.getNgDepartment());
		newUser.setNgDlrMediumType(clonedNgUser.getNgDlrMediumType());
		newUser.setNgMessageType(clonedNgUser.getNgMessageType());
		newUser.setNgOrganisation(clonedNgUser.getNgOrganisation());
		newUser.setNgPriority(clonedNgUser.getNgPriority());
		newUser.setNgStatus(clonedNgUser.getNgStatus());
		newUser.setNgUserAbusingWordsCategoryMaps(clonedNgUser.getNgUserAbusingWordsCategoryMaps());
		newUser.setNgUserBlackLists(clonedNgUser.getNgUserBlackLists());
		newUser.setNgUserDlrConfigs(clonedNgUser.getNgUserDlrConfigs());
		newUser.setNgUserPremiumLists(clonedNgUser.getNgUserPremiumLists());
		newUser.setNgUserSenderIdBlackLists(clonedNgUser.getNgUserSenderIdBlackLists());
		//newUser.setNgUserSenderIdMaps(clonedNgUser.getNgUserSenderIdMaps());
		newUser.setNgUserTemplateMaps(clonedNgUser.getNgUserTemplateMaps());
		//newUser.setIsIsVisualizeAllowed(clonedNgUser.getIsVisualizeAllowed());
		newUser.setParentId(clonedNgUser.getParentId());
		newUser.setReId(clonedNgUser.getReId());
		newUser.setSaId(clonedNgUser.getSaId());
		newUser.setSeId(clonedNgUser.getSeId());
		newUser.setAmId(clonedNgUser.getAmId());
//		changes for dlr url type and body 
		newUser.setDlrUrlType(clonedNgUser.getDlrUrlType());
		newUser.setDlrUrlBody(clonedNgUser.getDlrUrlBody());
//		end code 
		//newUser.setVersion(1);
		return newUser;
	}
}
