package com.noesis.domain.persistence;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;

/**
 * NgTemplate generated by hbm2java
 */
@Entity
@Table(name = "ng_group_message_info", catalog = "genesis")
public class NgGroupMessageInfo implements java.io.Serializable {
	
	private static final long serialVersionUID = 1L;
	private Integer id;
	private String campaignName;
	private String msgType;
	private Integer msgPart;
	private Integer groupId;
	private String senderId;
	private char isTemplateSelected;
	private String msgText;
	private char isScheduled;
	private Integer templateId;
	private NgUser ngUser;
	private Date createdDate;
	
	public NgGroupMessageInfo() {
	}
	
	public NgGroupMessageInfo(String campaignName, String msgType, Integer msgPart, Integer groupId, String senderId, 
			char isTemplateSelected, String msgText, char isScheduled, Integer templateId, NgUser ngUser, Date createdDate) {
		this.campaignName = campaignName;
		this.msgType = msgType;
		this.msgPart = msgPart;
		this.groupId = groupId;
		this.senderId = senderId;
		this.isTemplateSelected = isTemplateSelected;
		this.msgText = msgText;
		this.isScheduled = isScheduled;
		this.templateId = templateId;
		this.ngUser = ngUser;
		this.createdDate = createdDate;
	}
	
	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
	
	@Column(name = "campaign_name", length = 200)
	public String getCampaignName() {
		return this.campaignName;
	}

	public void setCampaignName(String campaignName) {
		this.campaignName = campaignName;
	}
	
	@Column(name = "msg_type", length = 10)
	public String getMsgtype() {
		return this.msgType;
	}

	public void setMsgtype(String msgType) {
		this.msgType = msgType;
	}
	
	@Column(name = "msg_part", length = 10)
	public Integer getMsgPart() {
		return this.msgPart;
	}

	public void setMsgPart(Integer msgPart) {
		this.msgPart = msgPart;
	}
	
	@Column(name = "group_id", length = 11)
	public Integer getGroupId() {
		return this.groupId;
	}

	public void setGroupId(Integer groupId) {
		this.groupId = groupId;
	}
	
	@Column(name = "sender_id", length = 20)
	public String getSenderId() {
		return this.senderId;
	}

	public void setSenderId(String senderId) {
		this.senderId = senderId;
	}
	
	@Column(name = "is_template_selected", length = 1)
	public char getIsTemplateSelected() {
		return this.isTemplateSelected;
	}

	public void setIsTemplateSelected(char isTemplateSelected) {
		this.isTemplateSelected = isTemplateSelected;
	}
	
	@Column(name = "msg_text", length = 5000)
	public String getMsgText() {
		return this.msgText;
	}

	public void setMsgText(String msgText) {
		this.msgText = msgText;
	}
	
	@Column(name = "is_scheduled", length = 1)
	public char getIsScheduled() {
		return this.isScheduled;
	}

	public void setIsScheduled(char isScheduled) {
		this.isScheduled = isScheduled;
	}
	
	@Column(name = "template_id", length = 10)
	public Integer getTemplateId() {
		return this.templateId;
	}

	public void setTemplateId(Integer templateId) {
		this.templateId = templateId;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false, updatable = false, insertable = true)
	@JsonBackReference
	public NgUser getNgUser() {
		return this.ngUser;
	}

	public void setNgUser(NgUser ngUser) {
		this.ngUser = ngUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}
}
