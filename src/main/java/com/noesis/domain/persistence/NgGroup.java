package com.noesis.domain.persistence;
// Generated 11 Feb, 2019 12:48:00 AM by Hibernate Tools 5.0.6.Final

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;



import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * NgGroup generated by hbm2java
 */
@Entity
@Table(name = "ng_group", catalog = "genesis")
public class NgGroup implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer id;
	private String groupName;
	private String groupDesc;
	private NgUser ngUser;
	private Date createdDate;
	private Date updatedDate;
	private Set<NgGroupNumberDetails> ngGroupNumbersList= new HashSet<NgGroupNumberDetails>(0);

	public NgGroup() {
	}

	public NgGroup(String groupName, String groupDesc, NgUser ngUser, Date createdDate, Date updatedDate) {
		super();
		this.groupName = groupName;
		this.groupDesc = groupDesc;
		this.ngUser = ngUser;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "group_name", length = 100)
	public String getGroupName() {
		return this.groupName;
	}

	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

	@Column(name = "group_desc", length = 250)
	public String getGroupDesc() {
		return this.groupDesc;
	}

	public void setGroupDesc(String groupDesc) {
		this.groupDesc = groupDesc;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false, updatable = false, insertable = true)
	@JsonBackReference
	public NgUser getNgUser() {
		return this.ngUser;
	}

	public void setNgUser(NgUser ngUser) {
		this.ngUser = ngUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 19)
	public Date getUpdatedDate() {
		return updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "ngGroup", cascade=CascadeType.ALL)
	@JsonIgnore
	public Set<NgGroupNumberDetails> getNgGroupNumbersList() {
		return ngGroupNumbersList;
	}

	public void setNgGroupNumbersList(Set<NgGroupNumberDetails> ngGroupNumbersList) {
		this.ngGroupNumbersList = ngGroupNumbersList;
	}


}
