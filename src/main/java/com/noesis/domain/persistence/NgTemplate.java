package com.noesis.domain.persistence;
// Generated 11 Feb, 2019 12:48:00 AM by Hibernate Tools 5.0.6.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.Set;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * NgTemplate generated by hbm2java
 */
@Entity
@Table(name = "ng_template", catalog = "genesis")
public class NgTemplate implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer id;
	private String templateName;
	private String templateDesc;
	private Integer variableCount;
	private String templateType;
	private String templateText;
	private NgUser ngUser;
	private Date createdDate;
	private Date updatedDate;
	private Set<NgTemplateMessageInfo> ngTemplateMessageInfoList;

	public NgTemplate() {
	}

	public NgTemplate(String templateName, String templateDesc, Integer variableCount, String templateType, String templateText, NgUser ngUser, Date createdDate, Date updatedDate, Set<NgTemplateMessageInfo> ngTemplateMessageInfoList) {
		this.templateName = templateName;
		this.templateDesc = templateDesc;
		this.variableCount = variableCount;
		this.templateType = templateType;
		this.templateText = templateText;
		this.ngUser = ngUser;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.ngTemplateMessageInfoList = ngTemplateMessageInfoList;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "template_name", length = 100)
	public String getTemplateName() {
		return this.templateName;
	}

	public void setTemplateName(String templateName) {
		this.templateName = templateName;
	}

	@Column(name = "template_desc", length = 250)
	public String getTemplateDesc() {
		return this.templateDesc;
	}

	public void setTemplateDesc(String templateDesc) {
		this.templateDesc = templateDesc;
	}
	
	@Column(name = "variable_count", length = 50)
	public int getVariableCount() {
		return this.variableCount;
	}

	public void setVariableCount(int variableCount) {
		this.variableCount = variableCount;
	}
	
	@Column(name = "template_type", length = 2)
	public String getTemplateType() {
		return this.templateType;
	}

	public void setTemplateType(String templateType) {
		this.templateType = templateType;
	}

	@Column(name = "template_text", length = 250)
	public String getTemplateText() {
		return this.templateText;
	}

	public void setTemplateText(String templateText) {
		this.templateText = templateText;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false, updatable = false, insertable = true)
	@JsonBackReference
	public NgUser getNgUser() {
		return this.ngUser;
	}

	public void setNgUser(NgUser ngUser) {
		this.ngUser = ngUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 19)
	public Date getUpdatedDate() {
		return updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "ngTemplate")
	@JsonIgnore
	public Set<NgTemplateMessageInfo> getNgTemplateMessageInfoList() {
		return this.ngTemplateMessageInfoList;
	}

	public void setNgTemplateMessageInfoList(Set<NgTemplateMessageInfo> ngTemplateMessageInfoList) {
		this.ngTemplateMessageInfoList = ngTemplateMessageInfoList;
	}

	
	
}
